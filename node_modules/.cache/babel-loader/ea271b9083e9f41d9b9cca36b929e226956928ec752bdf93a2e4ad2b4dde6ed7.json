{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\ReactProjects\\\\project-vb\\\\src\\\\Page1.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useMemo, useState } from \"react\";\nimport { Form, Input, Textarea, useFormValidation } from \"reactjs-forms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page1 = () => {\n  _s();\n  const [fname, setfname] = useState(\"\");\n  const [lname, setlname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const validation = useFormValidation();\n  const fnameErrors = useMemo(() => errors.fname ? errors.fname.map((v, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: v.msg\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 49\n  }, this)) : [], [errors]);\n  const lnameErrors = useMemo(() => errors.lname ? errors.fname.map((v, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: v.msg\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 53\n  }, this)) : [], [errors]);\n  const emailErrors = useMemo(() => errors.email ? errors.email.map((v, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: v.msg\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 57\n  }, this)) : [], [errors]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => {\n        e.preventDefault();\n        console.log(e.currentTarget.validation); //we have accessed to the validation results via submit event currentTarget\n        setErrors(validation().result); //get validation errors and set errors state for rendering\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => setEmail(e.target.value),\n        value: email //we have to declare value attribute\n        ,\n        identity: \"email\" //also we have to declare identity attribute because of that value is used to get validation results\n        ,\n        id: \"email\" //\n        ,\n        type: \"email\",\n        validation: {\n          required: true,\n          isEmail: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: emailErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fname\",\n        children: \"fname:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => setfname(e.target.value),\n        value: fname,\n        identity: \"fname\",\n        id: \"fname\",\n        validation: {\n          isfname: {\n            msg: \"custom message\",\n            //you may or not declare a custom message\n            value: true //you dont have to declare value also\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: emailErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fname\",\n        children: \"fname:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => setfname(e.target.value),\n        value: lname,\n        identity: \"lname\",\n        id: \"lname\",\n        validation: {\n          islname: {\n            msg: \"custom message\",\n            //you may or not declare a custom message\n            value: true //you dont have to declare value also\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Page1, \"nTmO/roK17tk98kH3zpYp5h15dk=\", false, function () {\n  return [useFormValidation];\n});\n_c = Page1;\nexport default Page1;\nvar _c;\n$RefreshReg$(_c, \"Page1\");","map":{"version":3,"names":["React","useMemo","useState","Form","Input","Textarea","useFormValidation","jsxDEV","_jsxDEV","Page1","_s","fname","setfname","lname","setlname","email","setEmail","validation","fnameErrors","errors","map","v","i","children","msg","fileName","_jsxFileName","lineNumber","columnNumber","lnameErrors","emailErrors","onSubmit","e","preventDefault","console","log","currentTarget","setErrors","result","htmlFor","onChange","target","value","identity","id","type","required","isEmail","isfname","islname","_c","$RefreshReg$"],"sources":["D:/Coding/ReactProjects/project-vb/src/Page1.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { useMemo, useState } from \"react\";\r\nimport { Form, Input, Textarea, useFormValidation } from \"reactjs-forms\";\r\n\r\nconst Page1 = () => {\r\n    const [fname, setfname] = useState(\"\");\r\n    const [lname, setlname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n  const validation = useFormValidation();\r\n\r\n  \r\n  const fnameErrors = useMemo(\r\n      () =>\r\n      errors.fname ? errors.fname.map((v, i) => <li key={i}>{v.msg}</li>) : [],\r\n      [errors]\r\n      );\r\n      \r\n      const lnameErrors = useMemo(\r\n          () =>\r\n          errors.lname ? errors.fname.map((v, i) => <li key={i}>{v.msg}</li>) : [],\r\n          [errors]\r\n          );\r\n          \r\n          const emailErrors = useMemo(\r\n            () =>\r\n              errors.email ? errors.email.map((v, i) => <li key={i}>{v.msg}</li>) : [],\r\n            [errors]\r\n          );\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          console.log(e.currentTarget.validation); //we have accessed to the validation results via submit event currentTarget\r\n          setErrors(validation().result); //get validation errors and set errors state for rendering\r\n        }}\r\n      >\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <Input\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          value={email} //we have to declare value attribute\r\n          identity=\"email\" //also we have to declare identity attribute because of that value is used to get validation results\r\n          id=\"email\" //\r\n          type=\"email\"\r\n          validation={{\r\n            required: true,\r\n            isEmail: true,\r\n          }}\r\n        />\r\n        {/* list all email erros*/}\r\n        <ul>{emailErrors}</ul>\r\n        <br />\r\n        <label htmlFor=\"fname\">fname:</label>\r\n        <Input\r\n          onChange={(e) => setfname(e.target.value)}\r\n          value={fname}\r\n          identity=\"fname\"\r\n          id=\"fname\"\r\n          validation={{\r\n            isfname: {\r\n              msg: \"custom message\", //you may or not declare a custom message\r\n              value: true, //you dont have to declare value also\r\n            },\r\n            \r\n          }}\r\n        />\r\n        {/* list all email erros*/}\r\n        <ul>{emailErrors}</ul>\r\n        <br />\r\n        <label htmlFor=\"fname\">fname:</label>\r\n        <Input\r\n          onChange={(e) => setfname(e.target.value)}\r\n          value={lname}\r\n          identity=\"lname\"\r\n          id=\"lname\"\r\n          validation={{\r\n            islname: {\r\n              msg: \"custom message\", //you may or not declare a custom message\r\n              value: true, //you dont have to declare value also\r\n            },\r\n            \r\n          }}\r\n        />\r\n        <button>Send</button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page1;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}