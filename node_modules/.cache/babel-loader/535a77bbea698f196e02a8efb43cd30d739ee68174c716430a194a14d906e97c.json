{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\ReactProjects\\\\project-vb\\\\src\\\\Page2.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useMemo, useState } from \"react\";\nimport { Form, Input, Textarea, useFormValidation } from \"reactjs-forms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Page2 = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [addressErrors, setAddressErrors] = useState({});\n  const validation = useFormValidation();\n  const emailErrors = useMemo(() => errors.email ? errors.email.map((v, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: v.msg\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 49\n  }, this)) : [], [errors]);\n  const nameErrors = useMemo(() => errors.name ? errors.name.map((v, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: v.msg\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 47\n  }, this)) : [], [errors]);\n  const ageErrors = useMemo(() => errors.age ? errors.age.map((v, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: v.msg\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 45\n  }, this)) : [], [errors]);\n  const onlyAddressErrors = useMemo(() => addressErrors.address ? addressErrors.address.map((v, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: v.msg\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 47\n  }, this)) : [], [addressErrors]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Vi \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Page2, \"42M+zSJTnq2wxsIXrSpoZUWYUTM=\", false, function () {\n  return [useFormValidation];\n});\n_c = Page2;\nexport default Page2;\nvar _c;\n$RefreshReg$(_c, \"Page2\");","map":{"version":3,"names":["React","useMemo","useState","Form","Input","Textarea","useFormValidation","jsxDEV","_jsxDEV","Fragment","_Fragment","Page2","_s","email","setEmail","name","setName","age","setAge","address","setAddress","errors","setErrors","addressErrors","setAddressErrors","validation","emailErrors","map","v","i","children","msg","fileName","_jsxFileName","lineNumber","columnNumber","nameErrors","ageErrors","onlyAddressErrors","_c","$RefreshReg$"],"sources":["D:/Coding/ReactProjects/project-vb/src/Page2.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { useMemo, useState } from \"react\";\r\nimport { Form, Input, Textarea, useFormValidation } from \"reactjs-forms\";\r\n\r\nconst Page2 = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [addressErrors, setAddressErrors] = useState({});\r\n\r\n  const validation = useFormValidation();\r\n\r\n  const emailErrors = useMemo(\r\n    () =>\r\n      errors.email ? errors.email.map((v, i) => <li key={i}>{v.msg}</li>) : [],\r\n    [errors]\r\n  );\r\n\r\n  const nameErrors = useMemo(\r\n    () =>\r\n      errors.name ? errors.name.map((v, i) => <li key={i}>{v.msg}</li>) : [],\r\n    [errors]\r\n  );\r\n\r\n  const ageErrors = useMemo(\r\n    () =>\r\n      errors.age ? errors.age.map((v, i) => <li key={i}>{v.msg}</li>) : [],\r\n    [errors]\r\n  );\r\n\r\n  const onlyAddressErrors = useMemo(\r\n    () =>\r\n      addressErrors.address\r\n        ? addressErrors.address.map((v, i) => <li key={i}>{v.msg}</li>)\r\n        : [],\r\n    [addressErrors]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <h1> Vi </h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page2;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}