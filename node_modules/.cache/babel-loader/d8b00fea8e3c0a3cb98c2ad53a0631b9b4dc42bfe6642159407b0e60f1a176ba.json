{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ValidatePipeLine = [{\n  case: \"isEmail\",\n  pattern: {\n    is: {\n      regex: {\n        value: '^(([^<>()[\\\\].,;:\\\\s@\"]+(.[^<>()[\\\\].,;:\\\\s@\"]+)*)|(\".+\"))@(([^<>()[\\\\].,;:\\\\s@\"]+.)+[^<>()[\\\\].,;:\\\\s@\"]{2,})$',\n        flag: \"gim\"\n      }\n    }\n  },\n  defaultMsg: \"invalid email address\"\n}, {\n  case: \"isAlpha\",\n  pattern: {\n    is: {\n      regex: {\n        value: \"^[a-z]+$\",\n        flag: \"gim\"\n      }\n    }\n  },\n  defaultMsg: \"{{identity}} field value must contain only letters.\"\n}, {\n  case: \"isUnicode\",\n  pattern: {\n    is: {\n      regex: {\n        value: \"^\\\\p{L}+$\",\n        flag: \"gimu\"\n      }\n    }\n  },\n  defaultMsg: \"{{identity}} field value must contain only letters.\"\n}, {\n  case: \"isName\",\n  pattern: {\n    is: {\n      regex: {\n        value: \"[\\\\p{L}`'~.\\\\s]{2,}$\",\n        flag: \"gimu\"\n      }\n    }\n  },\n  defaultMsg: \"invalid name\"\n}, {\n  case: \"isNumeric\",\n  pattern: {\n    is: {\n      regex: {\n        value: \"^[0-9]+$\",\n        flag: \"gim\"\n      }\n    }\n  },\n  defaultMsg: \"{{identity}} field value must contain only numbers\"\n}, {\n  case: \"isAlphaNumeric\",\n  pattern: {\n    is: {\n      regex: {\n        value: \"^[a-z | 0-9]+$\",\n        flag: \"gim\"\n      }\n    }\n  },\n  defaultMsg: \"{{identity}} field value must contain letters and numbers.\"\n}, {\n  case: \"isUnicodeNumeric\",\n  pattern: {\n    is: {\n      regex: {\n        value: \"^[\\\\p{L} | 0-9]+$\",\n        flag: \"gimu\"\n      }\n    }\n  },\n  defaultMsg: \"{{identity}} field value must contain letters and numbers.\"\n}, {\n  case: \"maxLen\",\n  pattern: {\n    len: {\n      greater: true\n    }\n  },\n  defaultMsg: \"{{identity}} field value must be maximum {{value}} characters.\"\n}, {\n  case: \"minLen\",\n  pattern: {\n    len: {\n      lower: true\n    }\n  },\n  defaultMsg: \"{{identity}} field value must be minimum {{value}} characters.\"\n}, {\n  case: \"min\",\n  pattern: {\n    num: {\n      lower: true\n    }\n  },\n  defaultMsg: \"{{identity}} field value must be greater than {{value}}.\"\n}, {\n  case: \"max\",\n  pattern: {\n    num: {\n      greater: true\n    }\n  },\n  defaultMsg: \"{{identity}} field value must be lower than {{value}}.\"\n}];\nexports.default = ValidatePipeLine;","map":{"version":3,"names":["Object","defineProperty","exports","value","ValidatePipeLine","case","pattern","is","regex","flag","defaultMsg","len","greater","lower","num","default"],"sources":["D:/Coding/ReactProjects/project-vb/node_modules/reactjs-forms/core/pipeline.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ValidatePipeLine = [\r\n    {\r\n        case: \"isEmail\",\r\n        pattern: {\r\n            is: {\r\n                regex: {\r\n                    value: '^(([^<>()[\\\\].,;:\\\\s@\"]+(.[^<>()[\\\\].,;:\\\\s@\"]+)*)|(\".+\"))@(([^<>()[\\\\].,;:\\\\s@\"]+.)+[^<>()[\\\\].,;:\\\\s@\"]{2,})$',\r\n                    flag: \"gim\",\r\n                },\r\n            },\r\n        },\r\n        defaultMsg: \"invalid email address\",\r\n    },\r\n    {\r\n        case: \"isAlpha\",\r\n        pattern: {\r\n            is: {\r\n                regex: {\r\n                    value: \"^[a-z]+$\",\r\n                    flag: \"gim\",\r\n                },\r\n            },\r\n        },\r\n        defaultMsg: \"{{identity}} field value must contain only letters.\",\r\n    },\r\n    {\r\n        case: \"isUnicode\",\r\n        pattern: {\r\n            is: {\r\n                regex: {\r\n                    value: \"^\\\\p{L}+$\",\r\n                    flag: \"gimu\",\r\n                },\r\n            },\r\n        },\r\n        defaultMsg: \"{{identity}} field value must contain only letters.\",\r\n    },\r\n    {\r\n        case: \"isName\",\r\n        pattern: {\r\n            is: {\r\n                regex: {\r\n                    value: \"[\\\\p{L}`'~.\\\\s]{2,}$\",\r\n                    flag: \"gimu\",\r\n                },\r\n            },\r\n        },\r\n        defaultMsg: \"invalid name\",\r\n    },\r\n    {\r\n        case: \"isNumeric\",\r\n        pattern: {\r\n            is: {\r\n                regex: {\r\n                    value: \"^[0-9]+$\",\r\n                    flag: \"gim\",\r\n                },\r\n            },\r\n        },\r\n        defaultMsg: \"{{identity}} field value must contain only numbers\",\r\n    },\r\n    {\r\n        case: \"isAlphaNumeric\",\r\n        pattern: {\r\n            is: {\r\n                regex: {\r\n                    value: \"^[a-z | 0-9]+$\",\r\n                    flag: \"gim\",\r\n                },\r\n            },\r\n        },\r\n        defaultMsg: \"{{identity}} field value must contain letters and numbers.\",\r\n    },\r\n    {\r\n        case: \"isUnicodeNumeric\",\r\n        pattern: {\r\n            is: {\r\n                regex: {\r\n                    value: \"^[\\\\p{L} | 0-9]+$\",\r\n                    flag: \"gimu\",\r\n                },\r\n            },\r\n        },\r\n        defaultMsg: \"{{identity}} field value must contain letters and numbers.\",\r\n    },\r\n    {\r\n        case: \"maxLen\",\r\n        pattern: {\r\n            len: {\r\n                greater: true,\r\n            },\r\n        },\r\n        defaultMsg: \"{{identity}} field value must be maximum {{value}} characters.\",\r\n    },\r\n    {\r\n        case: \"minLen\",\r\n        pattern: {\r\n            len: {\r\n                lower: true,\r\n            },\r\n        },\r\n        defaultMsg: \"{{identity}} field value must be minimum {{value}} characters.\",\r\n    },\r\n    {\r\n        case: \"min\",\r\n        pattern: {\r\n            num: {\r\n                lower: true,\r\n            },\r\n        },\r\n        defaultMsg: \"{{identity}} field value must be greater than {{value}}.\",\r\n    },\r\n    {\r\n        case: \"max\",\r\n        pattern: {\r\n            num: {\r\n                greater: true,\r\n            },\r\n        },\r\n        defaultMsg: \"{{identity}} field value must be lower than {{value}}.\",\r\n    },\r\n];\r\nexports.default = ValidatePipeLine;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,gBAAgB,GAAG,CACnB;EACIC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE;IACLC,EAAE,EAAE;MACAC,KAAK,EAAE;QACHL,KAAK,EAAE,iHAAiH;QACxHM,IAAI,EAAE;MACV;IACJ;EACJ,CAAC;EACDC,UAAU,EAAE;AAChB,CAAC,EACD;EACIL,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE;IACLC,EAAE,EAAE;MACAC,KAAK,EAAE;QACHL,KAAK,EAAE,UAAU;QACjBM,IAAI,EAAE;MACV;IACJ;EACJ,CAAC;EACDC,UAAU,EAAE;AAChB,CAAC,EACD;EACIL,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE;IACLC,EAAE,EAAE;MACAC,KAAK,EAAE;QACHL,KAAK,EAAE,WAAW;QAClBM,IAAI,EAAE;MACV;IACJ;EACJ,CAAC;EACDC,UAAU,EAAE;AAChB,CAAC,EACD;EACIL,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE;IACLC,EAAE,EAAE;MACAC,KAAK,EAAE;QACHL,KAAK,EAAE,sBAAsB;QAC7BM,IAAI,EAAE;MACV;IACJ;EACJ,CAAC;EACDC,UAAU,EAAE;AAChB,CAAC,EACD;EACIL,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE;IACLC,EAAE,EAAE;MACAC,KAAK,EAAE;QACHL,KAAK,EAAE,UAAU;QACjBM,IAAI,EAAE;MACV;IACJ;EACJ,CAAC;EACDC,UAAU,EAAE;AAChB,CAAC,EACD;EACIL,IAAI,EAAE,gBAAgB;EACtBC,OAAO,EAAE;IACLC,EAAE,EAAE;MACAC,KAAK,EAAE;QACHL,KAAK,EAAE,gBAAgB;QACvBM,IAAI,EAAE;MACV;IACJ;EACJ,CAAC;EACDC,UAAU,EAAE;AAChB,CAAC,EACD;EACIL,IAAI,EAAE,kBAAkB;EACxBC,OAAO,EAAE;IACLC,EAAE,EAAE;MACAC,KAAK,EAAE;QACHL,KAAK,EAAE,mBAAmB;QAC1BM,IAAI,EAAE;MACV;IACJ;EACJ,CAAC;EACDC,UAAU,EAAE;AAChB,CAAC,EACD;EACIL,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE;IACLK,GAAG,EAAE;MACDC,OAAO,EAAE;IACb;EACJ,CAAC;EACDF,UAAU,EAAE;AAChB,CAAC,EACD;EACIL,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE;IACLK,GAAG,EAAE;MACDE,KAAK,EAAE;IACX;EACJ,CAAC;EACDH,UAAU,EAAE;AAChB,CAAC,EACD;EACIL,IAAI,EAAE,KAAK;EACXC,OAAO,EAAE;IACLQ,GAAG,EAAE;MACDD,KAAK,EAAE;IACX;EACJ,CAAC;EACDH,UAAU,EAAE;AAChB,CAAC,EACD;EACIL,IAAI,EAAE,KAAK;EACXC,OAAO,EAAE;IACLQ,GAAG,EAAE;MACDF,OAAO,EAAE;IACb;EACJ,CAAC;EACDF,UAAU,EAAE;AAChB,CAAC,CACJ;AACDR,OAAO,CAACa,OAAO,GAAGX,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}