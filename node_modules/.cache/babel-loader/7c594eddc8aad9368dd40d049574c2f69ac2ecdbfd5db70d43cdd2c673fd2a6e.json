{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\ReactProjects\\\\project-vb\\\\src\\\\Page1.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Page2 from \"./Page2\";\nimport { useMemo, useState } from \"react\";\nimport { Form, Input, Textarea, useFormValidation } from \"reactjs-forms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page1 = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [addressErrors, setAddressErrors] = useState({});\n  const validation = useFormValidation();\n  const emailErrors = useMemo(() => errors.email ? errors.email.map((v, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: v.msg\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 49\n  }, this)) : [], [errors]);\n  const nameErrors = useMemo(() => errors.name ? errors.name.map((v, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: v.msg\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 47\n  }, this)) : [], [errors]);\n  const ageErrors = useMemo(() => errors.age ? errors.age.map((v, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: v.msg\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 45\n  }, this)) : [], [errors]);\n  const onlyAddressErrors = useMemo(() => addressErrors.address ? addressErrors.address.map((v, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: v.msg\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 47\n  }, this)) : [], [addressErrors]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => {\n        e.preventDefault();\n        console.log(e.currentTarget.validation); //we have accessed to the validation results via submit event currentTarget\n        setErrors(validation().result); //get validation errors and set errors state for rendering\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => setEmail(e.target.value),\n        value: email //we have to declare value attribute\n        ,\n        identity: \"email\" //also we have to declare identity attribute because of that value is used to get validation results\n        ,\n        id: \"email\" //\n        ,\n        type: \"email\",\n        validation: {\n          required: true,\n          isEmail: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: emailErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => setName(e.target.value),\n        value: name,\n        identity: \"name\",\n        id: \"name\",\n        validation: {\n          isName: {\n            msg: \"custom message\",\n            //you may or not declare a custom message\n            value: true //you dont have to declare value also\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: nameErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        children: \"Age:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => setAge(e.target.value),\n        value: age,\n        identity: \"age\",\n        id: \"age\",\n        validation: {\n          isNumeric: true,\n          min: 17,\n          //you can assign value or msg like object notation\n          max: {\n            value: \"120\",\n            msg: \"What was that.holy lighten!!!!!\"\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ageErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        onChange: e => setAddress(e.target.value),\n        value: address,\n        identity: \"address\",\n        id: \"address\",\n        validation: {\n          required: true,\n          isUnicode: true\n        },\n        onBlur: () => {\n          setAddressErrors(validation(\"address\").result); //you may send args to get only specific inputs errors like [\"adress\",\"email\"] or \"address\",\"email\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: onlyAddressErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        href: Page2,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Page1, \"42M+zSJTnq2wxsIXrSpoZUWYUTM=\", false, function () {\n  return [useFormValidation];\n});\n_c = Page1;\nexport default Page1;\nvar _c;\n$RefreshReg$(_c, \"Page1\");","map":{"version":3,"names":["React","Page2","useMemo","useState","Form","Input","Textarea","useFormValidation","jsxDEV","_jsxDEV","Page1","_s","email","setEmail","name","setName","age","setAge","address","setAddress","errors","setErrors","addressErrors","setAddressErrors","validation","emailErrors","map","v","i","children","msg","fileName","_jsxFileName","lineNumber","columnNumber","nameErrors","ageErrors","onlyAddressErrors","onSubmit","e","preventDefault","console","log","currentTarget","result","htmlFor","onChange","target","value","identity","id","type","required","isEmail","isName","isNumeric","min","max","isUnicode","onBlur","href","_c","$RefreshReg$"],"sources":["D:/Coding/ReactProjects/project-vb/src/Page1.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Page2 from \"./Page2\";\r\n\r\nimport { useMemo, useState } from \"react\";\r\nimport { Form, Input, Textarea, useFormValidation } from \"reactjs-forms\";\r\n\r\nconst Page1 = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [addressErrors, setAddressErrors] = useState({});\r\n\r\n  const validation = useFormValidation();\r\n\r\n  const emailErrors = useMemo(\r\n    () =>\r\n      errors.email ? errors.email.map((v, i) => <li key={i}>{v.msg}</li>) : [],\r\n    [errors]\r\n  );\r\n\r\n  const nameErrors = useMemo(\r\n    () =>\r\n      errors.name ? errors.name.map((v, i) => <li key={i}>{v.msg}</li>) : [],\r\n    [errors]\r\n  );\r\n\r\n  const ageErrors = useMemo(\r\n    () =>\r\n      errors.age ? errors.age.map((v, i) => <li key={i}>{v.msg}</li>) : [],\r\n    [errors]\r\n  );\r\n\r\n  const onlyAddressErrors = useMemo(\r\n    () =>\r\n      addressErrors.address\r\n        ? addressErrors.address.map((v, i) => <li key={i}>{v.msg}</li>)\r\n        : [],\r\n    [addressErrors]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          console.log(e.currentTarget.validation); //we have accessed to the validation results via submit event currentTarget\r\n          setErrors(validation().result); //get validation errors and set errors state for rendering\r\n        }}\r\n      >\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <Input\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          value={email} //we have to declare value attribute\r\n          identity=\"email\" //also we have to declare identity attribute because of that value is used to get validation results\r\n          id=\"email\" //\r\n          type=\"email\"\r\n          validation={{\r\n            required: true,\r\n            isEmail: true,\r\n          }}\r\n        />\r\n        {/* list all email erros*/}\r\n        <ul>{emailErrors}</ul>\r\n        <br />\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <Input\r\n          onChange={(e) => setName(e.target.value)}\r\n          value={name}\r\n          identity=\"name\"\r\n          id=\"name\"\r\n          validation={{\r\n            isName: {\r\n              msg: \"custom message\", //you may or not declare a custom message\r\n              value: true, //you dont have to declare value also\r\n            },\r\n          }}\r\n        />\r\n        {/* list all name erros*/}\r\n        <ul>{nameErrors}</ul>\r\n        <br />\r\n        <label htmlFor=\"age\">Age:</label>\r\n        <Input\r\n          onChange={(e) => setAge(e.target.value)}\r\n          value={age}\r\n          identity=\"age\"\r\n          id=\"age\"\r\n          validation={{\r\n            isNumeric: true,\r\n            min: 17, //you can assign value or msg like object notation\r\n            max: {\r\n              value: \"120\",\r\n              msg: \"What was that.holy lighten!!!!!\",\r\n            },\r\n          }}\r\n        />\r\n        <ul>{ageErrors}</ul>\r\n        <br />\r\n        <label htmlFor=\"address\">Address:</label>\r\n        <br />\r\n        <Textarea\r\n          onChange={(e) => setAddress(e.target.value)}\r\n          value={address}\r\n          identity=\"address\"\r\n          id=\"address\"\r\n          validation={{\r\n            required: true,\r\n            isUnicode: true,\r\n          }}\r\n          onBlur={() => {\r\n            setAddressErrors(validation(\"address\").result); //you may send args to get only specific inputs errors like [\"adress\",\"email\"] or \"address\",\"email\"\r\n          }}\r\n        />\r\n        <ul>{onlyAddressErrors}</ul>\r\n        <button href={Page2}>Send</button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page1;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}